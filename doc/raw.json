{"majorversion": 3, "classmap": {"ExtensionsTest": {"name": "ExtensionsTest", "constructors": [{"description": "<p>Tests for the extensions functionality</p>"}], "namespace": "", "module": "Test", "guessedname": "ExtensionsTest", "file": "1-extensions-test.js", "guessedtype": "property", "shortname": "ExtensionsTest", "description": "<p>Tests for the extensions functionality</p>"}, "ConfigTest": {"name": "ConfigTest", "constructors": [{"description": "<p>Unit tests for the node-config library</p>"}], "namespace": "", "module": "Test", "guessedname": "ConfigTest", "file": "2-config-test.js", "guessedtype": "property", "shortname": "ConfigTest", "description": "<p>Unit tests for the node-config library</p>"}, "Config": {"return": "config {object} the requested configuration object", "name": "Config", "constructors": [{"params": [{"type": "object", "name": "config", "description": "  Configuration object (see Configuration attributes)"}], "description": "<p>Main configuration class</p>\nThis takes a default configuration object for a module, and folds in values\nfrom configuration files and values passed in from the command line."}], "namespace": "", "module": "Config", "guessedname": "exports", "file": "config.js", "guessedtype": "function", "shortname": "Config", "description": "<p>Main configuration class</p>\nThis takes a default configuration object for a module, and folds in values\nfrom configuration files and values passed in from the command line."}, "UnderscoreExtensions": {"name": "UnderscoreExtensions", "namespace": "", "module": "Config", "methods": {"_.isObject": {"return": {"type": "boolean", "description": "TRUE if the arg is an object, FALSE if not"}, "params": [{"type": "MIXED", "name": "arg", "description": "  An argument of any type."}], "description": "Is the specified argument an object?\nThe argument is an object if it's a JS object, but not an array and\nnot a function."}, "_.extendDeep": {"return": {"type": "object", "description": "The altered mergeInto object is returned"}, "params": [{"type": "object", "name": "mergeInto", "description": "  The object to merge into"}, {"type": "object...", "name": "mergeFrom...", "description": "  - Any number of objects to merge from"}, {"type": "integer", "name": "depth", "description": "  An optional depth to prevent recursion.  Default: 20."}], "description": "Extend an object, and any object it contains.\nThis does not replace deep objects like _.extend(), but dives into them\nreplacing individual elements instead."}, "_.out": {"return": {"type": "eyes.inspect", "description": "Whatever eyes.inspect() returns"}, "params": [{"type": "string", "name": "name", "description": "  (optional) The object name"}, {"type": "object", "name": "obj", "description": "  The object to print"}, {"type": "boolean or integer", "name": "deep", "description": "  Print deep?  Default: 2k output. TRUE prints up to 32k, or specify a size for the output."}, {"type": "object", "name": "eyesConfig", "description": "  An optional eyes configuration object (see the eyes module)"}], "description": "Print to the output stream\nThis is a handy method for printing stuff to the output stream."}, "_.outStr": {"return": {"type": "string", "description": "The formatted object as a string"}, "params": [{"type": "string", "name": "name", "description": "  (optional) The object name"}, {"type": "object", "name": "obj", "description": "  The object to print"}, {"type": "boolean or integer", "name": "deep", "description": "  Print deep?  Default: 2k output. TRUE prints up to 32k, or specify a size for the output."}, {"type": "object", "name": "eyesConfig", "description": "  An optional eyes configuration object (see the eyes module)"}], "description": "Return a string representation of an object\nThis does the same thing as _.out(), except instead of sending the output to\nthe standard output, the output is returned as a string."}, "_.cloneDeep": {"return": {"type": "object", "description": "A new object with the elements copied from the copyFrom object"}, "params": [{"type": "object", "name": "copyFrom", "description": "  The original object to copy from"}, {"type": "integer", "name": "depth", "description": "  An optional depth to prevent recursion.  Default: 20."}], "description": "Return a deep copy of the specified object.\nThis returns a new object with all elements copied from the specified\nobject.  Deep copies are made of objects and arrays so you can do anything\nwith the returned object without affecting the input object.", "guessedname": "DEFAULT_DEPTH", "guessedtype": "property"}}, "static": "", "file": "extensions.js", "shortname": "UnderscoreExtensions", "description": "<p>Public extensions to the underscore library</p>\nThese extensions were written to assist development of the node-config\nlibrary.  They have been made public for other modules to use.\nTo use these extensions, simply include the underscore library and\ncall them as if they were a part of the library.\nExample:\n<pre>\nvar _ = require('underscore');\n_.extendDeep(extendInto, extendFrom, {some:\"defaults\"});\n</pre>"}}, "version": "0.4.0", "modules": {"Test": {"description": "<p>Unit tests</p>", "submodules": [], "classlist": ["ExtensionsTest", "ConfigTest"], "filelist": ["1-extensions-test.js", "2-config-test.js"], "subdata": {}, "name": "Test"}, "Config": {"description": "<p>Runtime configuration for Node.js deployments</p>", "submodules": [], "classlist": ["Config", "UnderscoreExtensions"], "filelist": ["config.js", "extensions.js"], "subdata": {}, "name": "Config"}}, "filemap": {"1-extensions-test.js": {"classlist": ["ExtensionsTest"], "name": "1-extensions-test.js", "module": "Test"}, "extensions.js": {"classlist": ["UnderscoreExtensions"], "name": "extensions.js", "module": "Config"}, "config.js": {"classlist": ["Config"], "name": "config.js", "module": "Config"}, "2-config-test.js": {"classlist": ["ConfigTest"], "name": "2-config-test.js", "module": "Test"}}}